// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: network.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "network.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace network {
class LayerParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LayerParam> {
} _LayerParam_default_instance_;
class LayerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Layer> {
} _Layer_default_instance_;
class NetworkDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Network> {
} _Network_default_instance_;

namespace protobuf_network_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParam, input_shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParam, output_shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParam, weights_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParam, biases_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParam, kernel_shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParam, stride_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParam, padding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParam, dilation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParam, apply_col2im_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParam, local_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParam, alpha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParam, beta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParam, pool_fn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParam, class_names_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  3,
  2,
  1,
  4,
  5,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, prev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, next_),
  0,
  1,
  2,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Network, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Network, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Network, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Network, num_layers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Network, use_threads_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Network, use_gpu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Network, layers_),
  0,
  1,
  2,
  3,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 19, sizeof(LayerParam)},
  { 33, 43, sizeof(Layer)},
  { 48, 58, sizeof(Network)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_LayerParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Layer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Network_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "network.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _LayerParam_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Layer_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Network_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _LayerParam_default_instance_.DefaultConstruct();
  _Layer_default_instance_.DefaultConstruct();
  _Network_default_instance_.DefaultConstruct();
  _Layer_default_instance_.get_mutable()->params_ = const_cast< ::network::LayerParam*>(
      ::network::LayerParam::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rnetwork.proto\022\007network\"\240\002\n\nLayerParam\022"
      "\023\n\013input_shape\030\t \003(\r\022\024\n\014output_shape\030\n \003"
      "(\r\022\017\n\007weights\030\006 \003(\002\022\016\n\006biases\030\007 \003(\002\022\024\n\014k"
      "ernel_shape\030\013 \003(\r\022\016\n\006stride\030\014 \003(\r\022\017\n\007pad"
      "ding\030\r \003(\r\022\023\n\010dilation\030\020 \001(\r:\0011\022\032\n\014apply"
      "_col2im\030\016 \001(\010:\004true\022\022\n\nlocal_size\030\017 \001(\r\022"
      "\020\n\005alpha\030\023 \001(\002:\0011\022\022\n\004beta\030\024 \001(\002:\0040.75\022\017\n"
      "\007pool_fn\030\030 \001(\t\022\023\n\013class_names\030\025 \003(\t\"d\n\005L"
      "ayer\022\014\n\004name\030\026 \002(\t\022\014\n\004type\030\027 \002(\t\022#\n\006para"
      "ms\030\002 \002(\0132\023.network.LayerParam\022\014\n\004prev\030\003 "
      "\003(\t\022\014\n\004next\030\004 \003(\t\"~\n\007Network\022\014\n\004name\030\001 \002"
      "(\t\022\022\n\nnum_layers\030\005 \002(\r\022\032\n\013use_threads\030\021 "
      "\001(\010:\005false\022\025\n\007use_gpu\030\022 \001(\010:\004true\022\036\n\006lay"
      "ers\030\010 \003(\0132\016.network.Layer"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 545);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "network.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_network_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LayerParam::kInputShapeFieldNumber;
const int LayerParam::kOutputShapeFieldNumber;
const int LayerParam::kWeightsFieldNumber;
const int LayerParam::kBiasesFieldNumber;
const int LayerParam::kKernelShapeFieldNumber;
const int LayerParam::kStrideFieldNumber;
const int LayerParam::kPaddingFieldNumber;
const int LayerParam::kDilationFieldNumber;
const int LayerParam::kApplyCol2ImFieldNumber;
const int LayerParam::kLocalSizeFieldNumber;
const int LayerParam::kAlphaFieldNumber;
const int LayerParam::kBetaFieldNumber;
const int LayerParam::kPoolFnFieldNumber;
const int LayerParam::kClassNamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LayerParam::LayerParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_network_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:network.LayerParam)
}
LayerParam::LayerParam(const LayerParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      weights_(from.weights_),
      biases_(from.biases_),
      input_shape_(from.input_shape_),
      output_shape_(from.output_shape_),
      kernel_shape_(from.kernel_shape_),
      stride_(from.stride_),
      padding_(from.padding_),
      class_names_(from.class_names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pool_fn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pool_fn()) {
    pool_fn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pool_fn_);
  }
  ::memcpy(&local_size_, &from.local_size_,
    reinterpret_cast<char*>(&beta_) -
    reinterpret_cast<char*>(&local_size_) + sizeof(beta_));
  // @@protoc_insertion_point(copy_constructor:network.LayerParam)
}

void LayerParam::SharedCtor() {
  _cached_size_ = 0;
  pool_fn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_size_ = 0u;
  apply_col2im_ = true;
  dilation_ = 1u;
  alpha_ = 1;
  beta_ = 0.75f;
}

LayerParam::~LayerParam() {
  // @@protoc_insertion_point(destructor:network.LayerParam)
  SharedDtor();
}

void LayerParam::SharedDtor() {
  pool_fn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LayerParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LayerParam::descriptor() {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LayerParam& LayerParam::default_instance() {
  protobuf_network_2eproto::InitDefaults();
  return *internal_default_instance();
}

LayerParam* LayerParam::New(::google::protobuf::Arena* arena) const {
  LayerParam* n = new LayerParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LayerParam::Clear() {
// @@protoc_insertion_point(message_clear_start:network.LayerParam)
  weights_.Clear();
  biases_.Clear();
  input_shape_.Clear();
  output_shape_.Clear();
  kernel_shape_.Clear();
  stride_.Clear();
  padding_.Clear();
  class_names_.Clear();
  if (has_pool_fn()) {
    GOOGLE_DCHECK(!pool_fn_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*pool_fn_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 62u) {
    local_size_ = 0u;
    apply_col2im_ = true;
    dilation_ = 1u;
    alpha_ = 1;
    beta_ = 0.75f;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LayerParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network.LayerParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float weights = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 53u, input, this->mutable_weights())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(50u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_weights())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float biases = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 61u, input, this->mutable_biases())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(58u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_biases())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 input_shape = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 72u, input, this->mutable_input_shape())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(74u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_input_shape())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 output_shape = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 80u, input, this->mutable_output_shape())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(82u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_output_shape())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 kernel_shape = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 88u, input, this->mutable_kernel_shape())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(90u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_kernel_shape())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 stride = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 96u, input, this->mutable_stride())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(98u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_stride())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 padding = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 104u, input, this->mutable_padding())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(106u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_padding())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool apply_col2im = 14 [default = true];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has_apply_col2im();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &apply_col2im_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 local_size = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          set_has_local_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &local_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 dilation = 16 [default = 1];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          set_has_dilation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dilation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float alpha = 19 [default = 1];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(157u)) {
          set_has_alpha();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &alpha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float beta = 20 [default = 0.75];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(165u)) {
          set_has_beta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &beta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string class_names = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_class_names()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->class_names(this->class_names_size() - 1).data(),
            this->class_names(this->class_names_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "network.LayerParam.class_names");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pool_fn = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pool_fn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pool_fn().data(), this->pool_fn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "network.LayerParam.pool_fn");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network.LayerParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network.LayerParam)
  return false;
#undef DO_
}

void LayerParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network.LayerParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float weights = 6;
  for (int i = 0, n = this->weights_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      6, this->weights(i), output);
  }

  // repeated float biases = 7;
  for (int i = 0, n = this->biases_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      7, this->biases(i), output);
  }

  // repeated uint32 input_shape = 9;
  for (int i = 0, n = this->input_shape_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      9, this->input_shape(i), output);
  }

  // repeated uint32 output_shape = 10;
  for (int i = 0, n = this->output_shape_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      10, this->output_shape(i), output);
  }

  // repeated uint32 kernel_shape = 11;
  for (int i = 0, n = this->kernel_shape_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      11, this->kernel_shape(i), output);
  }

  // repeated uint32 stride = 12;
  for (int i = 0, n = this->stride_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      12, this->stride(i), output);
  }

  // repeated uint32 padding = 13;
  for (int i = 0, n = this->padding_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      13, this->padding(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool apply_col2im = 14 [default = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->apply_col2im(), output);
  }

  // optional uint32 local_size = 15;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->local_size(), output);
  }

  // optional uint32 dilation = 16 [default = 1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->dilation(), output);
  }

  // optional float alpha = 19 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->alpha(), output);
  }

  // optional float beta = 20 [default = 0.75];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(20, this->beta(), output);
  }

  // repeated string class_names = 21;
  for (int i = 0, n = this->class_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->class_names(i).data(), this->class_names(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "network.LayerParam.class_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->class_names(i), output);
  }

  // optional string pool_fn = 24;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pool_fn().data(), this->pool_fn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "network.LayerParam.pool_fn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->pool_fn(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:network.LayerParam)
}

::google::protobuf::uint8* LayerParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:network.LayerParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float weights = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(6, this->weights_, target);

  // repeated float biases = 7;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(7, this->biases_, target);

  // repeated uint32 input_shape = 9;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(9, this->input_shape_, target);

  // repeated uint32 output_shape = 10;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(10, this->output_shape_, target);

  // repeated uint32 kernel_shape = 11;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(11, this->kernel_shape_, target);

  // repeated uint32 stride = 12;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(12, this->stride_, target);

  // repeated uint32 padding = 13;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(13, this->padding_, target);

  cached_has_bits = _has_bits_[0];
  // optional bool apply_col2im = 14 [default = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->apply_col2im(), target);
  }

  // optional uint32 local_size = 15;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->local_size(), target);
  }

  // optional uint32 dilation = 16 [default = 1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->dilation(), target);
  }

  // optional float alpha = 19 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->alpha(), target);
  }

  // optional float beta = 20 [default = 0.75];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(20, this->beta(), target);
  }

  // repeated string class_names = 21;
  for (int i = 0, n = this->class_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->class_names(i).data(), this->class_names(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "network.LayerParam.class_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(21, this->class_names(i), target);
  }

  // optional string pool_fn = 24;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pool_fn().data(), this->pool_fn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "network.LayerParam.pool_fn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->pool_fn(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.LayerParam)
  return target;
}

size_t LayerParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.LayerParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated float weights = 6;
  {
    unsigned int count = this->weights_size();
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->weights_size());
    total_size += data_size;
  }

  // repeated float biases = 7;
  {
    unsigned int count = this->biases_size();
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->biases_size());
    total_size += data_size;
  }

  // repeated uint32 input_shape = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->input_shape_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->input_shape_size());
    total_size += data_size;
  }

  // repeated uint32 output_shape = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->output_shape_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->output_shape_size());
    total_size += data_size;
  }

  // repeated uint32 kernel_shape = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->kernel_shape_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->kernel_shape_size());
    total_size += data_size;
  }

  // repeated uint32 stride = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->stride_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->stride_size());
    total_size += data_size;
  }

  // repeated uint32 padding = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->padding_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->padding_size());
    total_size += data_size;
  }

  // repeated string class_names = 21;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->class_names_size());
  for (int i = 0, n = this->class_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->class_names(i));
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional string pool_fn = 24;
    if (has_pool_fn()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pool_fn());
    }

    // optional uint32 local_size = 15;
    if (has_local_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->local_size());
    }

    // optional bool apply_col2im = 14 [default = true];
    if (has_apply_col2im()) {
      total_size += 1 + 1;
    }

    // optional uint32 dilation = 16 [default = 1];
    if (has_dilation()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dilation());
    }

    // optional float alpha = 19 [default = 1];
    if (has_alpha()) {
      total_size += 2 + 4;
    }

    // optional float beta = 20 [default = 0.75];
    if (has_beta()) {
      total_size += 2 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LayerParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network.LayerParam)
  GOOGLE_DCHECK_NE(&from, this);
  const LayerParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LayerParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network.LayerParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network.LayerParam)
    MergeFrom(*source);
  }
}

void LayerParam::MergeFrom(const LayerParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network.LayerParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  weights_.MergeFrom(from.weights_);
  biases_.MergeFrom(from.biases_);
  input_shape_.MergeFrom(from.input_shape_);
  output_shape_.MergeFrom(from.output_shape_);
  kernel_shape_.MergeFrom(from.kernel_shape_);
  stride_.MergeFrom(from.stride_);
  padding_.MergeFrom(from.padding_);
  class_names_.MergeFrom(from.class_names_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pool_fn();
      pool_fn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pool_fn_);
    }
    if (cached_has_bits & 0x00000002u) {
      local_size_ = from.local_size_;
    }
    if (cached_has_bits & 0x00000004u) {
      apply_col2im_ = from.apply_col2im_;
    }
    if (cached_has_bits & 0x00000008u) {
      dilation_ = from.dilation_;
    }
    if (cached_has_bits & 0x00000010u) {
      alpha_ = from.alpha_;
    }
    if (cached_has_bits & 0x00000020u) {
      beta_ = from.beta_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LayerParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network.LayerParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LayerParam::CopyFrom(const LayerParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.LayerParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LayerParam::IsInitialized() const {
  return true;
}

void LayerParam::Swap(LayerParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LayerParam::InternalSwap(LayerParam* other) {
  weights_.InternalSwap(&other->weights_);
  biases_.InternalSwap(&other->biases_);
  input_shape_.InternalSwap(&other->input_shape_);
  output_shape_.InternalSwap(&other->output_shape_);
  kernel_shape_.InternalSwap(&other->kernel_shape_);
  stride_.InternalSwap(&other->stride_);
  padding_.InternalSwap(&other->padding_);
  class_names_.InternalSwap(&other->class_names_);
  pool_fn_.Swap(&other->pool_fn_);
  std::swap(local_size_, other->local_size_);
  std::swap(apply_col2im_, other->apply_col2im_);
  std::swap(dilation_, other->dilation_);
  std::swap(alpha_, other->alpha_);
  std::swap(beta_, other->beta_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LayerParam::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LayerParam

// repeated uint32 input_shape = 9;
int LayerParam::input_shape_size() const {
  return input_shape_.size();
}
void LayerParam::clear_input_shape() {
  input_shape_.Clear();
}
::google::protobuf::uint32 LayerParam::input_shape(int index) const {
  // @@protoc_insertion_point(field_get:network.LayerParam.input_shape)
  return input_shape_.Get(index);
}
void LayerParam::set_input_shape(int index, ::google::protobuf::uint32 value) {
  input_shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.LayerParam.input_shape)
}
void LayerParam::add_input_shape(::google::protobuf::uint32 value) {
  input_shape_.Add(value);
  // @@protoc_insertion_point(field_add:network.LayerParam.input_shape)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LayerParam::input_shape() const {
  // @@protoc_insertion_point(field_list:network.LayerParam.input_shape)
  return input_shape_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LayerParam::mutable_input_shape() {
  // @@protoc_insertion_point(field_mutable_list:network.LayerParam.input_shape)
  return &input_shape_;
}

// repeated uint32 output_shape = 10;
int LayerParam::output_shape_size() const {
  return output_shape_.size();
}
void LayerParam::clear_output_shape() {
  output_shape_.Clear();
}
::google::protobuf::uint32 LayerParam::output_shape(int index) const {
  // @@protoc_insertion_point(field_get:network.LayerParam.output_shape)
  return output_shape_.Get(index);
}
void LayerParam::set_output_shape(int index, ::google::protobuf::uint32 value) {
  output_shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.LayerParam.output_shape)
}
void LayerParam::add_output_shape(::google::protobuf::uint32 value) {
  output_shape_.Add(value);
  // @@protoc_insertion_point(field_add:network.LayerParam.output_shape)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LayerParam::output_shape() const {
  // @@protoc_insertion_point(field_list:network.LayerParam.output_shape)
  return output_shape_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LayerParam::mutable_output_shape() {
  // @@protoc_insertion_point(field_mutable_list:network.LayerParam.output_shape)
  return &output_shape_;
}

// repeated float weights = 6;
int LayerParam::weights_size() const {
  return weights_.size();
}
void LayerParam::clear_weights() {
  weights_.Clear();
}
float LayerParam::weights(int index) const {
  // @@protoc_insertion_point(field_get:network.LayerParam.weights)
  return weights_.Get(index);
}
void LayerParam::set_weights(int index, float value) {
  weights_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.LayerParam.weights)
}
void LayerParam::add_weights(float value) {
  weights_.Add(value);
  // @@protoc_insertion_point(field_add:network.LayerParam.weights)
}
const ::google::protobuf::RepeatedField< float >&
LayerParam::weights() const {
  // @@protoc_insertion_point(field_list:network.LayerParam.weights)
  return weights_;
}
::google::protobuf::RepeatedField< float >*
LayerParam::mutable_weights() {
  // @@protoc_insertion_point(field_mutable_list:network.LayerParam.weights)
  return &weights_;
}

// repeated float biases = 7;
int LayerParam::biases_size() const {
  return biases_.size();
}
void LayerParam::clear_biases() {
  biases_.Clear();
}
float LayerParam::biases(int index) const {
  // @@protoc_insertion_point(field_get:network.LayerParam.biases)
  return biases_.Get(index);
}
void LayerParam::set_biases(int index, float value) {
  biases_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.LayerParam.biases)
}
void LayerParam::add_biases(float value) {
  biases_.Add(value);
  // @@protoc_insertion_point(field_add:network.LayerParam.biases)
}
const ::google::protobuf::RepeatedField< float >&
LayerParam::biases() const {
  // @@protoc_insertion_point(field_list:network.LayerParam.biases)
  return biases_;
}
::google::protobuf::RepeatedField< float >*
LayerParam::mutable_biases() {
  // @@protoc_insertion_point(field_mutable_list:network.LayerParam.biases)
  return &biases_;
}

// repeated uint32 kernel_shape = 11;
int LayerParam::kernel_shape_size() const {
  return kernel_shape_.size();
}
void LayerParam::clear_kernel_shape() {
  kernel_shape_.Clear();
}
::google::protobuf::uint32 LayerParam::kernel_shape(int index) const {
  // @@protoc_insertion_point(field_get:network.LayerParam.kernel_shape)
  return kernel_shape_.Get(index);
}
void LayerParam::set_kernel_shape(int index, ::google::protobuf::uint32 value) {
  kernel_shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.LayerParam.kernel_shape)
}
void LayerParam::add_kernel_shape(::google::protobuf::uint32 value) {
  kernel_shape_.Add(value);
  // @@protoc_insertion_point(field_add:network.LayerParam.kernel_shape)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LayerParam::kernel_shape() const {
  // @@protoc_insertion_point(field_list:network.LayerParam.kernel_shape)
  return kernel_shape_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LayerParam::mutable_kernel_shape() {
  // @@protoc_insertion_point(field_mutable_list:network.LayerParam.kernel_shape)
  return &kernel_shape_;
}

// repeated uint32 stride = 12;
int LayerParam::stride_size() const {
  return stride_.size();
}
void LayerParam::clear_stride() {
  stride_.Clear();
}
::google::protobuf::uint32 LayerParam::stride(int index) const {
  // @@protoc_insertion_point(field_get:network.LayerParam.stride)
  return stride_.Get(index);
}
void LayerParam::set_stride(int index, ::google::protobuf::uint32 value) {
  stride_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.LayerParam.stride)
}
void LayerParam::add_stride(::google::protobuf::uint32 value) {
  stride_.Add(value);
  // @@protoc_insertion_point(field_add:network.LayerParam.stride)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LayerParam::stride() const {
  // @@protoc_insertion_point(field_list:network.LayerParam.stride)
  return stride_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LayerParam::mutable_stride() {
  // @@protoc_insertion_point(field_mutable_list:network.LayerParam.stride)
  return &stride_;
}

// repeated uint32 padding = 13;
int LayerParam::padding_size() const {
  return padding_.size();
}
void LayerParam::clear_padding() {
  padding_.Clear();
}
::google::protobuf::uint32 LayerParam::padding(int index) const {
  // @@protoc_insertion_point(field_get:network.LayerParam.padding)
  return padding_.Get(index);
}
void LayerParam::set_padding(int index, ::google::protobuf::uint32 value) {
  padding_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.LayerParam.padding)
}
void LayerParam::add_padding(::google::protobuf::uint32 value) {
  padding_.Add(value);
  // @@protoc_insertion_point(field_add:network.LayerParam.padding)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LayerParam::padding() const {
  // @@protoc_insertion_point(field_list:network.LayerParam.padding)
  return padding_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LayerParam::mutable_padding() {
  // @@protoc_insertion_point(field_mutable_list:network.LayerParam.padding)
  return &padding_;
}

// optional uint32 dilation = 16 [default = 1];
bool LayerParam::has_dilation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LayerParam::set_has_dilation() {
  _has_bits_[0] |= 0x00000008u;
}
void LayerParam::clear_has_dilation() {
  _has_bits_[0] &= ~0x00000008u;
}
void LayerParam::clear_dilation() {
  dilation_ = 1u;
  clear_has_dilation();
}
::google::protobuf::uint32 LayerParam::dilation() const {
  // @@protoc_insertion_point(field_get:network.LayerParam.dilation)
  return dilation_;
}
void LayerParam::set_dilation(::google::protobuf::uint32 value) {
  set_has_dilation();
  dilation_ = value;
  // @@protoc_insertion_point(field_set:network.LayerParam.dilation)
}

// optional bool apply_col2im = 14 [default = true];
bool LayerParam::has_apply_col2im() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LayerParam::set_has_apply_col2im() {
  _has_bits_[0] |= 0x00000004u;
}
void LayerParam::clear_has_apply_col2im() {
  _has_bits_[0] &= ~0x00000004u;
}
void LayerParam::clear_apply_col2im() {
  apply_col2im_ = true;
  clear_has_apply_col2im();
}
bool LayerParam::apply_col2im() const {
  // @@protoc_insertion_point(field_get:network.LayerParam.apply_col2im)
  return apply_col2im_;
}
void LayerParam::set_apply_col2im(bool value) {
  set_has_apply_col2im();
  apply_col2im_ = value;
  // @@protoc_insertion_point(field_set:network.LayerParam.apply_col2im)
}

// optional uint32 local_size = 15;
bool LayerParam::has_local_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LayerParam::set_has_local_size() {
  _has_bits_[0] |= 0x00000002u;
}
void LayerParam::clear_has_local_size() {
  _has_bits_[0] &= ~0x00000002u;
}
void LayerParam::clear_local_size() {
  local_size_ = 0u;
  clear_has_local_size();
}
::google::protobuf::uint32 LayerParam::local_size() const {
  // @@protoc_insertion_point(field_get:network.LayerParam.local_size)
  return local_size_;
}
void LayerParam::set_local_size(::google::protobuf::uint32 value) {
  set_has_local_size();
  local_size_ = value;
  // @@protoc_insertion_point(field_set:network.LayerParam.local_size)
}

// optional float alpha = 19 [default = 1];
bool LayerParam::has_alpha() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LayerParam::set_has_alpha() {
  _has_bits_[0] |= 0x00000010u;
}
void LayerParam::clear_has_alpha() {
  _has_bits_[0] &= ~0x00000010u;
}
void LayerParam::clear_alpha() {
  alpha_ = 1;
  clear_has_alpha();
}
float LayerParam::alpha() const {
  // @@protoc_insertion_point(field_get:network.LayerParam.alpha)
  return alpha_;
}
void LayerParam::set_alpha(float value) {
  set_has_alpha();
  alpha_ = value;
  // @@protoc_insertion_point(field_set:network.LayerParam.alpha)
}

// optional float beta = 20 [default = 0.75];
bool LayerParam::has_beta() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LayerParam::set_has_beta() {
  _has_bits_[0] |= 0x00000020u;
}
void LayerParam::clear_has_beta() {
  _has_bits_[0] &= ~0x00000020u;
}
void LayerParam::clear_beta() {
  beta_ = 0.75f;
  clear_has_beta();
}
float LayerParam::beta() const {
  // @@protoc_insertion_point(field_get:network.LayerParam.beta)
  return beta_;
}
void LayerParam::set_beta(float value) {
  set_has_beta();
  beta_ = value;
  // @@protoc_insertion_point(field_set:network.LayerParam.beta)
}

// optional string pool_fn = 24;
bool LayerParam::has_pool_fn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LayerParam::set_has_pool_fn() {
  _has_bits_[0] |= 0x00000001u;
}
void LayerParam::clear_has_pool_fn() {
  _has_bits_[0] &= ~0x00000001u;
}
void LayerParam::clear_pool_fn() {
  pool_fn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pool_fn();
}
const ::std::string& LayerParam::pool_fn() const {
  // @@protoc_insertion_point(field_get:network.LayerParam.pool_fn)
  return pool_fn_.GetNoArena();
}
void LayerParam::set_pool_fn(const ::std::string& value) {
  set_has_pool_fn();
  pool_fn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:network.LayerParam.pool_fn)
}
#if LANG_CXX11
void LayerParam::set_pool_fn(::std::string&& value) {
  set_has_pool_fn();
  pool_fn_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:network.LayerParam.pool_fn)
}
#endif
void LayerParam::set_pool_fn(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pool_fn();
  pool_fn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:network.LayerParam.pool_fn)
}
void LayerParam::set_pool_fn(const char* value, size_t size) {
  set_has_pool_fn();
  pool_fn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:network.LayerParam.pool_fn)
}
::std::string* LayerParam::mutable_pool_fn() {
  set_has_pool_fn();
  // @@protoc_insertion_point(field_mutable:network.LayerParam.pool_fn)
  return pool_fn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LayerParam::release_pool_fn() {
  // @@protoc_insertion_point(field_release:network.LayerParam.pool_fn)
  clear_has_pool_fn();
  return pool_fn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LayerParam::set_allocated_pool_fn(::std::string* pool_fn) {
  if (pool_fn != NULL) {
    set_has_pool_fn();
  } else {
    clear_has_pool_fn();
  }
  pool_fn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pool_fn);
  // @@protoc_insertion_point(field_set_allocated:network.LayerParam.pool_fn)
}

// repeated string class_names = 21;
int LayerParam::class_names_size() const {
  return class_names_.size();
}
void LayerParam::clear_class_names() {
  class_names_.Clear();
}
const ::std::string& LayerParam::class_names(int index) const {
  // @@protoc_insertion_point(field_get:network.LayerParam.class_names)
  return class_names_.Get(index);
}
::std::string* LayerParam::mutable_class_names(int index) {
  // @@protoc_insertion_point(field_mutable:network.LayerParam.class_names)
  return class_names_.Mutable(index);
}
void LayerParam::set_class_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:network.LayerParam.class_names)
  class_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void LayerParam::set_class_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:network.LayerParam.class_names)
  class_names_.Mutable(index)->assign(std::move(value));
}
#endif
void LayerParam::set_class_names(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  class_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:network.LayerParam.class_names)
}
void LayerParam::set_class_names(int index, const char* value, size_t size) {
  class_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:network.LayerParam.class_names)
}
::std::string* LayerParam::add_class_names() {
  // @@protoc_insertion_point(field_add_mutable:network.LayerParam.class_names)
  return class_names_.Add();
}
void LayerParam::add_class_names(const ::std::string& value) {
  class_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:network.LayerParam.class_names)
}
#if LANG_CXX11
void LayerParam::add_class_names(::std::string&& value) {
  class_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:network.LayerParam.class_names)
}
#endif
void LayerParam::add_class_names(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  class_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:network.LayerParam.class_names)
}
void LayerParam::add_class_names(const char* value, size_t size) {
  class_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:network.LayerParam.class_names)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
LayerParam::class_names() const {
  // @@protoc_insertion_point(field_list:network.LayerParam.class_names)
  return class_names_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
LayerParam::mutable_class_names() {
  // @@protoc_insertion_point(field_mutable_list:network.LayerParam.class_names)
  return &class_names_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Layer::kNameFieldNumber;
const int Layer::kTypeFieldNumber;
const int Layer::kParamsFieldNumber;
const int Layer::kPrevFieldNumber;
const int Layer::kNextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Layer::Layer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_network_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:network.Layer)
}
Layer::Layer(const Layer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      prev_(from.prev_),
      next_(from.next_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_params()) {
    params_ = new ::network::LayerParam(*from.params_);
  } else {
    params_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:network.Layer)
}

void Layer::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_ = NULL;
}

Layer::~Layer() {
  // @@protoc_insertion_point(destructor:network.Layer)
  SharedDtor();
}

void Layer::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete params_;
  }
}

void Layer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Layer::descriptor() {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Layer& Layer::default_instance() {
  protobuf_network_2eproto::InitDefaults();
  return *internal_default_instance();
}

Layer* Layer::New(::google::protobuf::Arena* arena) const {
  Layer* n = new Layer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Layer::Clear() {
// @@protoc_insertion_point(message_clear_start:network.Layer)
  prev_.Clear();
  next_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_type()) {
      GOOGLE_DCHECK(!type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*type_.UnsafeRawStringPointer())->clear();
    }
    if (has_params()) {
      GOOGLE_DCHECK(params_ != NULL);
      params_->::network::LayerParam::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Layer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network.Layer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .network.LayerParam params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string prev = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_prev()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->prev(this->prev_size() - 1).data(),
            this->prev(this->prev_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "network.Layer.prev");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string next = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_next()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->next(this->next_size() - 1).data(),
            this->next(this->next_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "network.Layer.next");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "network.Layer.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string type = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "network.Layer.type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network.Layer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network.Layer)
  return false;
#undef DO_
}

void Layer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network.Layer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .network.LayerParam params = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->params_, output);
  }

  // repeated string prev = 3;
  for (int i = 0, n = this->prev_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prev(i).data(), this->prev(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "network.Layer.prev");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->prev(i), output);
  }

  // repeated string next = 4;
  for (int i = 0, n = this->next_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->next(i).data(), this->next(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "network.Layer.next");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->next(i), output);
  }

  // required string name = 22;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "network.Layer.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->name(), output);
  }

  // required string type = 23;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "network.Layer.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:network.Layer)
}

::google::protobuf::uint8* Layer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:network.Layer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .network.LayerParam params = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->params_, deterministic, target);
  }

  // repeated string prev = 3;
  for (int i = 0, n = this->prev_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prev(i).data(), this->prev(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "network.Layer.prev");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->prev(i), target);
  }

  // repeated string next = 4;
  for (int i = 0, n = this->next_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->next(i).data(), this->next(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "network.Layer.next");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->next(i), target);
  }

  // required string name = 22;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "network.Layer.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->name(), target);
  }

  // required string type = 23;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "network.Layer.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.Layer)
  return target;
}

size_t Layer::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:network.Layer)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 22;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_type()) {
    // required string type = 23;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_params()) {
    // required .network.LayerParam params = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->params_);
  }

  return total_size;
}
size_t Layer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.Layer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string name = 22;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string type = 23;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required .network.LayerParam params = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->params_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string prev = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->prev_size());
  for (int i = 0, n = this->prev_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->prev(i));
  }

  // repeated string next = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->next_size());
  for (int i = 0, n = this->next_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->next(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Layer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network.Layer)
  GOOGLE_DCHECK_NE(&from, this);
  const Layer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Layer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network.Layer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network.Layer)
    MergeFrom(*source);
  }
}

void Layer::MergeFrom(const Layer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network.Layer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prev_.MergeFrom(from.prev_);
  next_.MergeFrom(from.next_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_params()->::network::LayerParam::MergeFrom(from.params());
    }
  }
}

void Layer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network.Layer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Layer::CopyFrom(const Layer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.Layer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Layer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Layer::Swap(Layer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Layer::InternalSwap(Layer* other) {
  prev_.InternalSwap(&other->prev_);
  next_.InternalSwap(&other->next_);
  name_.Swap(&other->name_);
  type_.Swap(&other->type_);
  std::swap(params_, other->params_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Layer::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Layer

// required string name = 22;
bool Layer::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Layer::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Layer::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Layer::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& Layer::name() const {
  // @@protoc_insertion_point(field_get:network.Layer.name)
  return name_.GetNoArena();
}
void Layer::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:network.Layer.name)
}
#if LANG_CXX11
void Layer::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:network.Layer.name)
}
#endif
void Layer::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:network.Layer.name)
}
void Layer::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:network.Layer.name)
}
::std::string* Layer::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:network.Layer.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Layer::release_name() {
  // @@protoc_insertion_point(field_release:network.Layer.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Layer::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:network.Layer.name)
}

// required string type = 23;
bool Layer::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Layer::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void Layer::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void Layer::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& Layer::type() const {
  // @@protoc_insertion_point(field_get:network.Layer.type)
  return type_.GetNoArena();
}
void Layer::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:network.Layer.type)
}
#if LANG_CXX11
void Layer::set_type(::std::string&& value) {
  set_has_type();
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:network.Layer.type)
}
#endif
void Layer::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:network.Layer.type)
}
void Layer::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:network.Layer.type)
}
::std::string* Layer::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:network.Layer.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Layer::release_type() {
  // @@protoc_insertion_point(field_release:network.Layer.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Layer::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:network.Layer.type)
}

// required .network.LayerParam params = 2;
bool Layer::has_params() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Layer::set_has_params() {
  _has_bits_[0] |= 0x00000004u;
}
void Layer::clear_has_params() {
  _has_bits_[0] &= ~0x00000004u;
}
void Layer::clear_params() {
  if (params_ != NULL) params_->::network::LayerParam::Clear();
  clear_has_params();
}
const ::network::LayerParam& Layer::params() const {
  // @@protoc_insertion_point(field_get:network.Layer.params)
  return params_ != NULL ? *params_
                         : *::network::LayerParam::internal_default_instance();
}
::network::LayerParam* Layer::mutable_params() {
  set_has_params();
  if (params_ == NULL) {
    params_ = new ::network::LayerParam;
  }
  // @@protoc_insertion_point(field_mutable:network.Layer.params)
  return params_;
}
::network::LayerParam* Layer::release_params() {
  // @@protoc_insertion_point(field_release:network.Layer.params)
  clear_has_params();
  ::network::LayerParam* temp = params_;
  params_ = NULL;
  return temp;
}
void Layer::set_allocated_params(::network::LayerParam* params) {
  delete params_;
  params_ = params;
  if (params) {
    set_has_params();
  } else {
    clear_has_params();
  }
  // @@protoc_insertion_point(field_set_allocated:network.Layer.params)
}

// repeated string prev = 3;
int Layer::prev_size() const {
  return prev_.size();
}
void Layer::clear_prev() {
  prev_.Clear();
}
const ::std::string& Layer::prev(int index) const {
  // @@protoc_insertion_point(field_get:network.Layer.prev)
  return prev_.Get(index);
}
::std::string* Layer::mutable_prev(int index) {
  // @@protoc_insertion_point(field_mutable:network.Layer.prev)
  return prev_.Mutable(index);
}
void Layer::set_prev(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:network.Layer.prev)
  prev_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Layer::set_prev(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:network.Layer.prev)
  prev_.Mutable(index)->assign(std::move(value));
}
#endif
void Layer::set_prev(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  prev_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:network.Layer.prev)
}
void Layer::set_prev(int index, const char* value, size_t size) {
  prev_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:network.Layer.prev)
}
::std::string* Layer::add_prev() {
  // @@protoc_insertion_point(field_add_mutable:network.Layer.prev)
  return prev_.Add();
}
void Layer::add_prev(const ::std::string& value) {
  prev_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:network.Layer.prev)
}
#if LANG_CXX11
void Layer::add_prev(::std::string&& value) {
  prev_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:network.Layer.prev)
}
#endif
void Layer::add_prev(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  prev_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:network.Layer.prev)
}
void Layer::add_prev(const char* value, size_t size) {
  prev_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:network.Layer.prev)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Layer::prev() const {
  // @@protoc_insertion_point(field_list:network.Layer.prev)
  return prev_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Layer::mutable_prev() {
  // @@protoc_insertion_point(field_mutable_list:network.Layer.prev)
  return &prev_;
}

// repeated string next = 4;
int Layer::next_size() const {
  return next_.size();
}
void Layer::clear_next() {
  next_.Clear();
}
const ::std::string& Layer::next(int index) const {
  // @@protoc_insertion_point(field_get:network.Layer.next)
  return next_.Get(index);
}
::std::string* Layer::mutable_next(int index) {
  // @@protoc_insertion_point(field_mutable:network.Layer.next)
  return next_.Mutable(index);
}
void Layer::set_next(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:network.Layer.next)
  next_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Layer::set_next(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:network.Layer.next)
  next_.Mutable(index)->assign(std::move(value));
}
#endif
void Layer::set_next(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  next_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:network.Layer.next)
}
void Layer::set_next(int index, const char* value, size_t size) {
  next_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:network.Layer.next)
}
::std::string* Layer::add_next() {
  // @@protoc_insertion_point(field_add_mutable:network.Layer.next)
  return next_.Add();
}
void Layer::add_next(const ::std::string& value) {
  next_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:network.Layer.next)
}
#if LANG_CXX11
void Layer::add_next(::std::string&& value) {
  next_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:network.Layer.next)
}
#endif
void Layer::add_next(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  next_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:network.Layer.next)
}
void Layer::add_next(const char* value, size_t size) {
  next_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:network.Layer.next)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Layer::next() const {
  // @@protoc_insertion_point(field_list:network.Layer.next)
  return next_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Layer::mutable_next() {
  // @@protoc_insertion_point(field_mutable_list:network.Layer.next)
  return &next_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Network::kNameFieldNumber;
const int Network::kNumLayersFieldNumber;
const int Network::kUseThreadsFieldNumber;
const int Network::kUseGpuFieldNumber;
const int Network::kLayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Network::Network()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_network_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:network.Network)
}
Network::Network(const Network& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      layers_(from.layers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&num_layers_, &from.num_layers_,
    reinterpret_cast<char*>(&use_gpu_) -
    reinterpret_cast<char*>(&num_layers_) + sizeof(use_gpu_));
  // @@protoc_insertion_point(copy_constructor:network.Network)
}

void Network::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&num_layers_, 0, reinterpret_cast<char*>(&use_threads_) -
    reinterpret_cast<char*>(&num_layers_) + sizeof(use_threads_));
  use_gpu_ = true;
}

Network::~Network() {
  // @@protoc_insertion_point(destructor:network.Network)
  SharedDtor();
}

void Network::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Network::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Network::descriptor() {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Network& Network::default_instance() {
  protobuf_network_2eproto::InitDefaults();
  return *internal_default_instance();
}

Network* Network::New(::google::protobuf::Arena* arena) const {
  Network* n = new Network;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Network::Clear() {
// @@protoc_insertion_point(message_clear_start:network.Network)
  layers_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&num_layers_, 0, reinterpret_cast<char*>(&use_threads_) -
      reinterpret_cast<char*>(&num_layers_) + sizeof(use_threads_));
    use_gpu_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Network::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network.Network)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "network.Network.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 num_layers = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_num_layers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_layers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .network.Layer layers = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_layers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_threads = 17 [default = false];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {
          set_has_use_threads();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_threads_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_gpu = 18 [default = true];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {
          set_has_use_gpu();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_gpu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network.Network)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network.Network)
  return false;
#undef DO_
}

void Network::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network.Network)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "network.Network.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required uint32 num_layers = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->num_layers(), output);
  }

  // repeated .network.Layer layers = 8;
  for (unsigned int i = 0, n = this->layers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->layers(i), output);
  }

  // optional bool use_threads = 17 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->use_threads(), output);
  }

  // optional bool use_gpu = 18 [default = true];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->use_gpu(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:network.Network)
}

::google::protobuf::uint8* Network::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:network.Network)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "network.Network.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required uint32 num_layers = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->num_layers(), target);
  }

  // repeated .network.Layer layers = 8;
  for (unsigned int i = 0, n = this->layers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->layers(i), deterministic, target);
  }

  // optional bool use_threads = 17 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->use_threads(), target);
  }

  // optional bool use_gpu = 18 [default = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->use_gpu(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.Network)
  return target;
}

size_t Network::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:network.Network)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_num_layers()) {
    // required uint32 num_layers = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_layers());
  }

  return total_size;
}
size_t Network::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.Network)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required uint32 num_layers = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_layers());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .network.Layer layers = 8;
  {
    unsigned int count = this->layers_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->layers(i));
    }
  }

  if (_has_bits_[0 / 32] & 12u) {
    // optional bool use_threads = 17 [default = false];
    if (has_use_threads()) {
      total_size += 2 + 1;
    }

    // optional bool use_gpu = 18 [default = true];
    if (has_use_gpu()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Network::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network.Network)
  GOOGLE_DCHECK_NE(&from, this);
  const Network* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Network>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network.Network)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network.Network)
    MergeFrom(*source);
  }
}

void Network::MergeFrom(const Network& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network.Network)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  layers_.MergeFrom(from.layers_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      num_layers_ = from.num_layers_;
    }
    if (cached_has_bits & 0x00000004u) {
      use_threads_ = from.use_threads_;
    }
    if (cached_has_bits & 0x00000008u) {
      use_gpu_ = from.use_gpu_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Network::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network.Network)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Network::CopyFrom(const Network& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.Network)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Network::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->layers())) return false;
  return true;
}

void Network::Swap(Network* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Network::InternalSwap(Network* other) {
  layers_.InternalSwap(&other->layers_);
  name_.Swap(&other->name_);
  std::swap(num_layers_, other->num_layers_);
  std::swap(use_threads_, other->use_threads_);
  std::swap(use_gpu_, other->use_gpu_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Network::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Network

// required string name = 1;
bool Network::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Network::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Network::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Network::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& Network::name() const {
  // @@protoc_insertion_point(field_get:network.Network.name)
  return name_.GetNoArena();
}
void Network::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:network.Network.name)
}
#if LANG_CXX11
void Network::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:network.Network.name)
}
#endif
void Network::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:network.Network.name)
}
void Network::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:network.Network.name)
}
::std::string* Network::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:network.Network.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Network::release_name() {
  // @@protoc_insertion_point(field_release:network.Network.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Network::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:network.Network.name)
}

// required uint32 num_layers = 5;
bool Network::has_num_layers() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Network::set_has_num_layers() {
  _has_bits_[0] |= 0x00000002u;
}
void Network::clear_has_num_layers() {
  _has_bits_[0] &= ~0x00000002u;
}
void Network::clear_num_layers() {
  num_layers_ = 0u;
  clear_has_num_layers();
}
::google::protobuf::uint32 Network::num_layers() const {
  // @@protoc_insertion_point(field_get:network.Network.num_layers)
  return num_layers_;
}
void Network::set_num_layers(::google::protobuf::uint32 value) {
  set_has_num_layers();
  num_layers_ = value;
  // @@protoc_insertion_point(field_set:network.Network.num_layers)
}

// optional bool use_threads = 17 [default = false];
bool Network::has_use_threads() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Network::set_has_use_threads() {
  _has_bits_[0] |= 0x00000004u;
}
void Network::clear_has_use_threads() {
  _has_bits_[0] &= ~0x00000004u;
}
void Network::clear_use_threads() {
  use_threads_ = false;
  clear_has_use_threads();
}
bool Network::use_threads() const {
  // @@protoc_insertion_point(field_get:network.Network.use_threads)
  return use_threads_;
}
void Network::set_use_threads(bool value) {
  set_has_use_threads();
  use_threads_ = value;
  // @@protoc_insertion_point(field_set:network.Network.use_threads)
}

// optional bool use_gpu = 18 [default = true];
bool Network::has_use_gpu() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Network::set_has_use_gpu() {
  _has_bits_[0] |= 0x00000008u;
}
void Network::clear_has_use_gpu() {
  _has_bits_[0] &= ~0x00000008u;
}
void Network::clear_use_gpu() {
  use_gpu_ = true;
  clear_has_use_gpu();
}
bool Network::use_gpu() const {
  // @@protoc_insertion_point(field_get:network.Network.use_gpu)
  return use_gpu_;
}
void Network::set_use_gpu(bool value) {
  set_has_use_gpu();
  use_gpu_ = value;
  // @@protoc_insertion_point(field_set:network.Network.use_gpu)
}

// repeated .network.Layer layers = 8;
int Network::layers_size() const {
  return layers_.size();
}
void Network::clear_layers() {
  layers_.Clear();
}
const ::network::Layer& Network::layers(int index) const {
  // @@protoc_insertion_point(field_get:network.Network.layers)
  return layers_.Get(index);
}
::network::Layer* Network::mutable_layers(int index) {
  // @@protoc_insertion_point(field_mutable:network.Network.layers)
  return layers_.Mutable(index);
}
::network::Layer* Network::add_layers() {
  // @@protoc_insertion_point(field_add:network.Network.layers)
  return layers_.Add();
}
::google::protobuf::RepeatedPtrField< ::network::Layer >*
Network::mutable_layers() {
  // @@protoc_insertion_point(field_mutable_list:network.Network.layers)
  return &layers_;
}
const ::google::protobuf::RepeatedPtrField< ::network::Layer >&
Network::layers() const {
  // @@protoc_insertion_point(field_list:network.Network.layers)
  return layers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace network

// @@protoc_insertion_point(global_scope)
